<mxfile host="app.diagrams.net" modified="2021-07-27T14:27:30.243Z" agent="5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.107 Safari/537.36" etag="-sMnW5P9K0FiQiUw5bm6" version="14.9.2" type="github">
  <diagram id="3boQLeiTWKm0Tay0p_I-" name="Page-1">
    <mxGraphModel dx="1414" dy="739" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="iL321jyTXQRbQ51P6lqb-1" value="&lt;h1&gt;Реализовать бэкенд с минимальным фронтендом (можно на голом HTML):&lt;/h1&gt;&lt;p&gt;1. Имеется база стандартных пользователей Django (добавляются через&amp;nbsp;&lt;span&gt;админку, регистрацию делать не надо).&lt;/span&gt;&lt;/p&gt;&lt;p&gt;2. У каждого пользователя есть персональный блог. Новые создавать он не&amp;nbsp;&lt;span&gt;может.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;3. Пост в блоге — элементарная запись с заголовком, текстом и временем&amp;nbsp;&lt;span&gt;создания.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;4. Пользователь может подписываться (отписываться) на блоги других&amp;nbsp;&lt;span&gt;пользователей (любое количество).&lt;/span&gt;&lt;/p&gt;&lt;p&gt;5. У пользователя есть персональная лента новостей, в которой в обратном&amp;nbsp;&lt;span&gt;хронологическом порядке выводятся посты из блогов, на которые он&amp;nbsp;&lt;/span&gt;&lt;span&gt;подписан.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;6. Пользователь может помечать посты в ленте прочитанными.&lt;/p&gt;&lt;p&gt;7. При добавлении/удалении подписки содержание ленты меняется (при&amp;nbsp;&lt;span&gt;удалении подписки пометки о &quot;прочитанности&quot; сохранять не нужно).&lt;/span&gt;&lt;/p&gt;&lt;p&gt;8. При добавлении поста в ленту — подписчики получают почтовое&amp;nbsp;&lt;span&gt;уведомление со ссылкой на новый пост.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;9. Изменение содержания лент подписчиков (и рассылка уведомлений)&amp;nbsp;&lt;span&gt;должно происходить как при стандартной публикации поста&lt;/span&gt;&lt;/p&gt;&lt;p&gt;пользователем через интерфейс сайта, так при добавлении/удалении&amp;nbsp;&lt;span&gt;поста через админку.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Техника:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Python 3.x, Django &amp;gt; 3.х, Postgresql или SQLite.&lt;/p&gt;&lt;p&gt;Проект должен быть на гитхабе и отражать процесс разработки.&lt;/p&gt;&lt;p&gt;Код максимально приближенный к боевому (насколько получится).&lt;/p&gt;&lt;p&gt;Реализовать на Class-based views.&lt;/p&gt;&lt;p&gt;Проект необходимо упаковать в докер. Запускать через docker-compose.&lt;/p&gt;&lt;p&gt;В проекте должно быть README с описанием запуска проекта.&lt;/p&gt;&lt;p&gt;Срок выполнения 1-2 дня.&lt;/p&gt;&lt;p&gt;Результат выложить на github или bitbucket и прислать ссылку на&amp;nbsp;&lt;span&gt;info@nekidaem.ru.&lt;/span&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="40" y="40" width="770" height="590" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
